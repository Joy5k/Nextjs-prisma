// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model user{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String @db.VarChar(100)
  lastName String @db.VarChar(100)
  email String @unique @db.VarChar(200)
  mobile String @db.VarChar(100)
  password String @db.VarChar(200)
  otp String @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp @updatedAt
  categories categories[]
  customers customers[]
  products products[]
  invoices invoices[]
  invoices_product invoices_product[]
}
model customers{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name String @db.VarChar(50)
  email String  @db.VarChar(100)
  user_id BigInt @db.UnsignedBigInt
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp @updatedAt
  user user @relation(fields: [user_id],references: [id],onDelete:Restrict,onUpdate: Cascade)
  invoices invoices[]
}
model categories{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name String @db.VarChar(50)
  user_id BigInt @db.UnsignedBigInt
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp @updatedAt
  user user  @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  products products[]
}
model products{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  user_id BigInt @db.UnsignedBigInt
  categories_id BigInt @db.UnsignedBigInt
  name String @db.VarChar(50)
  price String @db.VarChar(50)
  unit String @db.VarChar(50)
  img_url String @db.VarChar(200)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp @updatedAt
  categories categories @relation(fields: [categories_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  user user  @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoices_product invoices_product?
}
model invoices{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  total String @db.VarChar(50)
  discount String @db.VarChar(50)
  vat String @db.VarChar(50)
  payable String @db.VarChar(50)
  user_id BigInt @db.UnsignedBigInt
  customer_id BigInt @db.UnsignedBigInt
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp @updatedAt
  customers customers @relation(fields: [customer_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate:Cascade)
  invoices_product invoices_product[]
}
model invoices_product{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt  @db.UnsignedBigInt
  product_id BigInt @unique @db.UnsignedBigInt
  user_id BigInt @db.UnsignedBigInt
  qty String @db.VarChar(50)
  sales_price String @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp @updatedAt
  invoices invoices @relation(fields: [invoice_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  products products @relation(fields: [product_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
}